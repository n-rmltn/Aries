@{
    ViewData["Title"] = "Employee";
}

<div class="card">
    <h5 class="card-header d-flex justify-content-between align-items-center">
        Employees List
        <div>
            <button id="bulkEditBtn" class="btn btn-primary me-2" style="display:none">
                <i class="bi bi-pencil"></i> Edit Selected
            </button>
            <button id="bulkDeleteBtn" class="btn btn-danger me-2" style="display:none">
                <i class="bi bi-trash"></i> Delete Selected
            </button>
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-lg"></i> Add New Employee
            </a>
        </div>
    </h5>
    <div class="table-responsive text-nowrap p-3">
        <table id="employeesTable" class="table table-hover">
            <thead>
                <tr>
                    <th class="col-1">
                        <input type="checkbox" class="form-check-input" id="selectAll">
                    </th>
                    <th class="col-5">Employee</th>
                    <th class="col-4">Department</th>
                    <th class="col-1">Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete employee "<span id="employeeName"></span>"?
            </div>
            <div class="modal-footer">
                <form id="deleteForm" asp-action="Delete" method="post">
                    <input type="hidden" id="employeeId" name="id" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Bulk delete modal -->
<form asp-action="BulkDelete" method="post" id="bulkDeleteForm">
    <input type="hidden" name="ids" id="selectedIds" />

    <div class="modal fade" id="bulkDeleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Bulk Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete <span id="selectedCount"></span> employees?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
</form>

<!-- Bulk edit modal-->
<form asp-action="BulkEdit" method="post" id="bulkEditForm">
    <input type="hidden" name="ids" id="selectedEditIds" />

    <div class="modal fade" id="bulkEditModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Bulk Edit Employees</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Update department for <span id="selectedEditCount"></span> employees:</p>
                    <div class="mb-3">
                        <label for="departmentId" class="form-label">Department</label>
                        <select name="departmentId" id="departmentId" class="form-select" required>
                            <option value="">-- Select Department --</option>
                            @foreach (var dept in ViewBag.Departments)
                            {
                                <option value="@dept.Value">@dept.Text</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        function showDeleteModal(id, name) {
            document.getElementById('employeeId').value = id;
            document.getElementById('employeeName').textContent = name;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        document.addEventListener('DOMContentLoaded', function () {
            const table = $('#employeesTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetEmployees")',
                    type: 'GET'
                },
                columns: [
                    {
                        data: null,
                        render: function (data) {
                            return `<input type="checkbox" class="form-check-input employee-checkbox" value="${data.id}">`;
                        },
                        orderable: false,
                        searchable: false
                    },
                    {
                        data: 'name',
                        render: function (data) {
                            return `<span>${data}</span>`;
                        }
                    },
                    {
                        data: 'departmentName',
                        render: function (data) {
                            return `<span class="badge rounded-pill bg-label-primary">${data}</span>`;
                        }
                    },
                    {
                        data: null,
                        render: function (data) {
                            return `
                                            <div class="dropdown">
                                                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                                    <i class="bi bi-three-dots-vertical"></i>
                                                </button>
                                                <div class="dropdown-menu">
                                                    <a class="dropdown-item" href="/Employee/Edit/${data.id}">
                                                        <i class="bi bi-pencil me-1"></i> Edit
                                                    </a>
                                                    <button class="dropdown-item text-danger"
                                                        onclick="showDeleteModal(${data.id}, '${data.name}')">
                                                        <i class="bi bi-trash me-1"></i> Delete
                                                    </button>
                                                </div>
                                            </div>`;
                        },
                        orderable: false,
                        searchable: false
                    }
                ],
                order: [[1, 'asc']],
                language: {
                    search: "Search employees:",
                    lengthMenu: "Show _MENU_ employees per page",
                    info: "Showing _START_ to _END_ of _TOTAL_ employees",
                    infoEmpty: "No employees available",
                    emptyTable: "No employees found"
                },
                drawCallback: function () {
                    updateBulkButtons();
                }
            });

            // Update bulk buttons state
            function updateBulkButtons() {
                const checkedBoxes = document.querySelectorAll('.employee-checkbox:checked');
                const hasSelection = checkedBoxes.length > 0;
                document.getElementById('bulkDeleteBtn').style.display = hasSelection ? 'inline-block' : 'none';
                document.getElementById('bulkEditBtn').style.display = hasSelection ? 'inline-block' : 'none';
            }

            // Select all handling
            $(document).on('change', '#selectAll', function () {
                const checkboxes = document.querySelectorAll('.employee-checkbox');
                checkboxes.forEach(checkbox => checkbox.checked = this.checked);
                updateBulkButtons();
            });

            // Individual checkbox handling
            $(document).on('change', '.employee-checkbox', function () {
                const selectAll = document.getElementById('selectAll');
                const checkboxes = document.querySelectorAll('.employee-checkbox');
                const allChecked = Array.from(checkboxes).every(cb => cb.checked);
                const someChecked = Array.from(checkboxes).some(cb => cb.checked);
                selectAll.checked = allChecked;
                selectAll.indeterminate = someChecked && !allChecked;
                updateBulkButtons();
            });

            // Bulk delete button handling
            $('#bulkDeleteBtn').on('click', function () {
                const selectedIds = Array.from(document.querySelectorAll('.employee-checkbox:checked'))
                    .map(cb => cb.value);
                document.getElementById('selectedIds').value = selectedIds.join(',');
                document.getElementById('selectedCount').textContent = selectedIds.length;
                new bootstrap.Modal(document.getElementById('bulkDeleteModal')).show();
            });

            // Bulk edit button handling
            $('#bulkEditBtn').on('click', function () {
                const selectedIds = Array.from(document.querySelectorAll('.employee-checkbox:checked'))
                    .map(cb => cb.value);
                document.getElementById('selectedEditIds').value = selectedIds.join(',');
                document.getElementById('selectedEditCount').textContent = selectedIds.length;
                new bootstrap.Modal(document.getElementById('bulkEditModal')).show();
            });
        });
    </script>
}